

~~~~~~~~~~~~~ Git ~~~~~~~~~~~~~

#  stages All (include new files, modified and deleted)
git add -A
#  stages new and modified, without deleted
git add .
#  stages modified and deleted, without new
git add -u

# remove from git, but not local file
git rm --cached file_name

~~~~~~~~~~~~~ Git ~~~~~~~~~~~~~


~~~~~~~~~~~~~ SpringBoot ~~~~~~~~~~~~~

curl https://start.spring.io

curl https://start.spring.io/starter.zip \
-d applicationName=App-Name\
-d type=maven-project \
-d language=java \
-d bootVersion=2.6.3 \    # UPDATE THIS
-d groupId=com.exampleurl \
-d artifactId=appname \
-d packageName=com.exampleurl.appname \
-d description=SpringBoot-Application \
-d packageName=com.exampleurl.appname \
-d packaging=jar \
-d javaVersion=17 \
-d name=appname \
-o SpringBootInit.zip \
-d dependencies=web \

~~~~~~~~~~~~~ SpringBoot ~~~~~~~~~~~~~


~~~~~~~~~~~~~ Python ~~~~~~~~~~~~~

# venv naming convention
my_project_venv

# create venv with python 3
python3 -m venv NAME-OF-ENVIRONMENT

# activate venv
source VENV_DIR/bin/activate

# check correct python is being used
which python or pip

# In venv use python and pip without the 3
python and pip

# deactivate venv
deactivate

# create requirements.txt
pip freeze > requirements.txt

# install requirements.txt
pip install -r requirements.txt

# pip uninstall all packages(make requirements.txt file first)
pip uninstall -y -r <(pip freeze)  # doesn't make file just removes

# show installed and not their dependencies
pip list --not-required

# show package dependencies
pip show package_name

 ~~~~~~~~~~~~ Python ~~~~~~~~~~~~~


 ~~~~~~~~~~~~ Flask ~~~~~~~~~~~~~

# set app name in terminal
set FLASK_APP=app_name.py # Windows
export FLASK_APP=app_name.py # Mac/Linux

# set debug
set FLASK_DEBUG=1 # Windows
export FLASK_DEBUG=1 # Mac/Linux

# run Flask
flask run

# run app with debug in "if name main"
python app.py

 ~~~~~~~~~~~~ Flask ~~~~~~~~~~~~~


 ~~~~~~~~~~~~ Vagrant ~~~~~~~~~~~~~

vagrant init (template file)
vagrant init IMAGE/NAME
vagrant up
vagrant halt 
vagrant suspend
vagrant resume
vagrant reload
vagrant ssh
vagrant status
vagrant global-status

ubuntu screen resize problem
sudo apt-get install virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11

 ~~~~~~~~~~~~ Vagrant ~~~~~~~~~~~~~


 ~~~~~~~~~~~~ Docker ~~~~~~~~~~~~~

docker pull IMAGENAME
docker images

docker run hello-world (pulls image if needed)
docker run -it NAME bash (interactive mode with bash as command)
docker run --name=yourname -d --rm IMAGENAME (name container / run in detached mode / rm container after running)
docker run --name containername -d -p 8080:80 image (expose ports host:container)

docker exec -it CONTAINERNAME bash (run a command in a running container)
docker logs NAMEOFCONTAINER (show logs)
docker port CONTAINERNAME (show ports)
docker container top CONTAINERNAME (processes running inside container)
docker image inspect CONTAINERNAME (image layers)

docker start NAMEOFCONTAINER (run existing container)
docker stop NAMEOFCONTAINER (stop running container)

docker ps (process status)
docker ps -a
docker rm CONTAINERNAME
docker image rm IMAGENAME
docker container prune (remove all stopped containers)
docker system prune (remove all unused containers, networks, images)

docker build -t NEWNAME:v1.0 . (t for tag)

docker image push IMAGENAME:TAG

sudo systemctl status docker
sudo systemctl enable --now docker
docker stats

 ~~~~~~~~~~~~ Docker ~~~~~~~~~~~~~


 ~~~~~~~~~~~~ Linux ~~~~~~~~~~~~~

sudo adduser USERNAME
sudo usermod -a -G sudo USERNAME
su USERNAME
df -h --total
ifconfig -a

 ~~~~~~~~~~~~ Linux ~~~~~~~~~~~~~


 ~~~~~~~~~~~~ Ubuntu ~~~~~~~~~~~~~

sudo apt-get update
sudo apt install ubuntu-desktop (install gui on server)

# remove gui from server (add -y flag)
sudo apt purg ubuntu-desktop
sudo apt autoremove
sudo apt autoclean

 ~~~~~~~~~~~~ Ubuntu ~~~~~~~~~~~~~
